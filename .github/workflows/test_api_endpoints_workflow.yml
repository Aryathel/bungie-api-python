name: Test API Build From Spec

on:
  push:
      branches:
        - 'dev'
  pull_request:
      branches:
        - 'main'
      types: [opened, reopened]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pipenv
          if [ -f Pipfile.lock ]; then pipenv install --dev; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with Unittest
        env:
          BUNGIE_API_KEY: ${{ secrets.BUNGIE_API_KEY }}
          BUNGIE_CLIENT_ID: ${{ secrets.BUNGIE_CLIENT_ID }}
          BUNGIE_CLIENT_SECRET: ${{ secrets.BUNGIE_CLIENT_SECRET }}
          BUNGIE_CLIENT_TYPE: ${{ secrets.BUNGIE_CLIENT_TYPE }}
          BUNGIE_OAUTH_CODE: ${{ secrets.BUNGIE_OAUTH_CODE }}
        run: |
          pipenv run python -m generate
